use reth_optimism_evm::OpEvmConfig;

use crate::traits::ClientBounds;
use core::ops::Deref;

/// Context common to all jobs generated by the builder.
pub struct BuilderContext<Client>
where
    Client: ClientBounds,
{
    client: Client,
    evm_config: OpEvmConfig,
}

impl<Client> BuilderContext<Client>
where
    Client: ClientBounds,
{
    /// Create a new builder context.
    pub fn new(client: Client, evm_config: OpEvmConfig) -> Self {
        Self { client, evm_config }
    }

    /// Get the client associated with this context.
    pub fn client(&self) -> &Client {
        &self.client
    }

    /// Get the EVM configuration associated with this context.
    pub fn evm_config(&self) -> &OpEvmConfig {
        &self.evm_config
    }
}

impl<Client> Deref for BuilderContext<Client>
where
    Client: ClientBounds,
{
    type Target = Client;

    fn deref(&self) -> &Self::Target {
        &self.client
    }
}
